Description: >
    Hans CERIL
    This template deploys a VPC, with a pair of public and private subnets spread 
    across two Availabilty Zones. 
    It deploys an Internet Gateway, with a default route on the public subnets. 
    It deploys a pair of NAT Gateways (one in each AZ), and default routes for them in the private subnets.

Parameters: 

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16

    PublicSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
        Type: String
        Default: 10.0.0.0/24

    PublicSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
        Type: String
        Default: 10.0.1.0/24

    PrivateSubnet1CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
        Type: String
        Default: 10.0.2.0/24

    PrivateSubnet2CIDR:
        Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
        Type: String
        Default: 10.0.3.0/24

Resources: 

    # Deploy the VPC of the infratructure
    VPC:
        Type: AWS::EC2::VPC
        Properties: 
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: name
                  Value: !Ref EnvironmentName
    
    # Deploy an Internet gateway 
    MyInternetGateway: 
        Type: AWS::EC2::InternetGateway
        Properties: 
            Tags: 
                - Key: name
                  Value: !Ref EnvironmentName
        
    # Attach the internet gateway to the VPC 
    InternetGatewayAttachment: 
        Type: AWS::EC2::VPCGatewayAttachment
        Properties: 
            InternetGatewayId: !Ref MyInternetGateway
            VpcId: !Ref VPC

    # Public Subnets
    PublicSubnet1:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select 
                - 0
                - !GetAZs 
                  Ref: 'AWS::Region'
            CidrBlock: !Ref PublicSubnet1CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        Properties:
            VpcId: !Ref VPC
            AvailabilityZone: !Select 
                - 1
                - !GetAZs 
                  Ref: 'AWS::Region'
            CidrBlock: !Ref PublicSubnet2CIDR
            MapPublicIpOnLaunch: true
            Tags: 
                - Key: Name 
                  Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

    # # Private subnets
    # PrivateSubnet1:
    #     Type: AWS::EC2::Subnet
    #     Properties: 
    #         VpcId: !Ref VPC
    #         AvailabilityZone: !Select 
    #             - 0
    #             - !GetAZs 
    #               Ref: 'AWS::Region'
    #         CidrBlock: !Ref PrivateSubnet1CIDR
    #         Tags: 
    #             - Key: name 
    #               Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

    #  # Private subnets
    # PrivateSubnet2:
    #     Type: AWS::EC2::Subnet
    #     Properties: 
    #         VpcId: !Ref VPC
    #         AvailabilityZone: !Select 
    #             - 1
    #             - !GetAZs 
    #               Ref: 'AWS::Region'
    #         CidrBlock: !Ref PrivateSubnet2CIDR
    #         Tags: 
    #             - Key: name 
    #               Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
    
    # # Allocated Elastic Ip to your Nat gateway 
    # NatGateway1EIP:
    #     Type: AWS::EC2::EIP
    #     DependsOn: InternetGatewayAttachment
    #     Properties: 
    #         Domain: vpc
    
    # NatGateway2EIP: 
    #     Type: AWS::EC2::EIP  
    #     DependsOn: InternetGatewayAttachment
    #     Properties: 
    #         Domain: vpc

    # # Natgateway
    # Natgateway1: 
    #     Type: AWS::EC2::NatGateway
    #     Properties:
    #         AllocationId: !GetAtt NatGateway1EIP.AllocationId
    #         SubnetId: !Ref PublicSubnet1
    #         Tags: 
    #             - Key: name
    #               Value: !Ref EnvironmentName
        
    # Natgateway2: 
    #     Type: AWS::EC2:NatGateway
    #     Properties:
    #         AllocationId: !GetAtt NatGateway2EIP.AllocationId
    #         SubnetId: !Ref PublicSubnet2
    #         Tags: 
    #             - Key: name 
    #               Value: !Ref EnvironmentName
    
# ======================>  Route table public  <=========================== 
    # RouteTablePublic:
    #     Type: AWS::EC2::RouteTable
    #     Properties:
    #       VpcId: !Ref VPC
    #       Tags:
    #         - key: name 
    #           value: !Sub ${EnvironmentName} Public routes

#     # Create Route 
#     DefaultPublicRoute: 
#         Type: AWS::EC2::Route
#         DependsOn: InternetGatewayAttachment
#         Properties: 
#             RouteTableId: !Ref PublicRouteTable
#             DestinationCidrBlock: 0.0.0.0/0
#             GatewayId: !Ref InternetGateway
    
#     # Associate Route to public subnet 
#     PublicSubnet1RouteTableAssociation:
#         Type: AWS::EC2::SubnetRouteTableAssociation
#         Properties:
#             RouteTableId: !Ref PublicRouteTable
#             SubnetId: !Ref PublicSubnet1

#     PublicSubnet2RouteTableAssociation:
#         Type: AWS::EC2::SubnetRouteTableAssociation
#         Properties:
#             RouteTableId: !Ref PublicRouteTable
#             SubnetId: !Ref PublicSubnet2

#     #=========================>  Route table private  <=========================== 
#     RouteTablePrivateAZ1:
#         Type: AWS::EC2::RouteTable
#         Properties:
#           VpcId:  !Ref VPC 
#           Tags:
#             - Key: name
#               Value: !Sub ${EnvironmentName} Private routes (AZ1)
 

#     RouteTablePrivateAZ2:
#         Type: AWS::EC2::RouteTable
#         Properties:
#           VpcId:  !Ref VPC 
#           Tags:
#             - Key: name
#               Value: !Sub ${EnvironmentName} Private routes (AZ2)
    
#     # Define defult private route
#     DefaultPrivateRouteAZ1: 
#         Type: AWS::EC2::Route
#         Properties: 
#             RouteTableId: !Ref RouteTablePrivateAZ1
#             DestinationCidrBlock: 0.0.0.0/0
#             GatewayId: !Ref Natgateway1
    
#     DefaultPrivateRouteAZ2: 
#         Type: AWS::EC2::Route
#         Properties: 
#             RouteTableId: !Ref RouteTablePrivateAZ2
#             DestinationCidrBlock: 0.0.0.0/0
#             GatewayId: !Ref Natgateway2
    
#     # Associate Route to private subnet route table AZ1 
#     PrivateSubnet1RouteTableAssociation:
#         Type: AWS::EC2::SubnetRouteTableAssociation
#         Properties:
#             RouteTableId: !Ref RouteTablePrivateAZ1
#             SubnetId: !Ref PublicSubnet1 

#     # Associate Route to private subnet route table AZ2 
#     PrivateSubnet2RouteTableAssociation:
#         Type: AWS::EC2::SubnetRouteTableAssociation
#         Properties:
#             RouteTableId: !Ref RouteTablePrivateAZ2
#             SubnetId: !Ref PublicSubnet2 

# # ================================> OUTPUT <========================================    
# Outputs:
#     # Output VPC
#     VPC: 
#         Description: A reference to the created VPC
#         Value: !Ref VPC
#         Export:
#           Name: !Sub ${EnvironmentName}-VPCID

#     # Output Public and Private Route Table
#     VPCPublicRouteTable:
#         Description: Public Routing
#         Value: !Ref RouteTablePublic
#         Export:
#           Name: !Sub ${EnvironmentName}-PUB-RT

#     VPCPrivateRouteTable1:
#         Description: Private Routing AZ1
#         Value: !Ref RouteTablePrivateAZ1
#         Export:
#           Name: !Sub ${EnvironmentName}-PRI1-RT

#     VPCPrivateRouteTable2:
#         Description: Private Routing AZ2
#         Value: !Ref RouteTablePrivateAZ2
#         Export:
#           Name: !Sub ${EnvironmentName}-PRI2-RT

#     # Output Public and private subnet 
#     PublicSubnets:
#         Description: A list of the public subnets
#         Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
#         Export:
#           Name: !Sub ${EnvironmentName}-PUB-NETS

#     PrivateSubnets:
#         Description: A list of the private subnets
#         Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]
#         Export:
#           Name: !Sub ${EnvironmentName}-PRIV-NETS

#     PublicSubnet1:
#         Description: A reference to the public subnet in the 1st Availability Zone
#         Value: !Ref PublicSubnet1
#         Export:
#           Name: !Sub ${EnvironmentName}-PUB1-SN

#     PublicSubnet2: 
#         Description: A reference to the public subnet in the 2nd Availability Zone
#         Value: !Ref PublicSubnet2
#         Export:
#           Name: !Sub ${EnvironmentName}-PUB2-SN

#     PrivateSubnet1:
#         Description: A reference to the private subnet in the 1st Availability Zone
#         Value: !Ref PrivateSubnet1
#         Export:
#           Name: !Sub ${EnvironmentName}-PRI1-SN

#     PrivateSubnet2: 
#         Description: A reference to the private subnet in the 2nd Availability Zone
#         Value: !Ref PrivateSubnet2
#         Export:
#           Name: !Sub ${EnvironmentName}-PRI2-SN











    