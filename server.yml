Description: >
    Hans Ceril / udacity project 2

Parameters: 

    EnvironmentName: 
        Description: An Environment name that will retrieve to network Environment
        Type: String
    
    AMI: 
        Description: 'The Machine Image to be used. Please use an Ubuntu Machine Image Specific to your region. Default is set to an AMI
        in the us-west-2 region.'
        Type: 
        Default: 
    
    

Ressources: 

    # Deploy security group for loadbalancer
    LoadBalancerSecGroup: 
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http to our load balancer 
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            GroupName: LoadBalancerSecurityGroups
            SecurityGroupEgress:
                - IpProtocol: tcp
                  Description: Specifies the outbound rule for the Load Balancer security group
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
            SecurityGroupIngress:
                - IpProtocol: tcp
                  Description: Specifies the inbound rule for the load Balancer security group
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
        
    # Deploy security group for server
    WebServerSecGroup: 
        Type: AWS::EC2::SecurityGroup
        Properties: 
            GroupDescription: Allow http to our hosts and SSH from local only
            VpcId: 
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            GroupName: ServerSecurityGroups
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 8080
                  ToPort: 8080
                  CidrIp: 0.0.0.0/0
            SecurityGroupIngress: 
                - IpProtocol: tcp
                  FromPort: 8080
                  ToPort: 8080
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp 
                  FromPort: 22 
                  ToPort: 22
                  CidrIp: 0.0.0.0/0

    # Define launch configuration for ours servers
    WebAppLaunchConfiguration: 
        Type: AWS::AutoScaling::LaunchConfiguration 
        Properties:
            Roles: 
                - UdacityS3ReadOnlyEC2
            UserData: 
                Fn::Base64: !Sub |
                #!/bin/bash
                apt-get update -y
                apt-get install unzip awscli -y
                apt-get install apache2 -y
                systemctl start apache2.service
                cd /var/www/html
                aws s3 cp s3://udacity-demo-1/udacity.zip .
                unzip -o udacity.zip
            
            



            


                Resources:
                    #instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
                    ProfileWithRolesForOurApp:
                      Type: AWS::IAM::InstanceProfile
                      Properties: 
                        Roles:
                          - UdacityS3ReadOnlyEC2
                    
                            #!/bin/bash
                            apt-get update -y
                            apt-get install unzip awscli -y
                            apt-get install apache2 -y
                            systemctl start apache2.service
                            cd /var/www/html
                            aws s3 cp s3://udacity-demo-1/udacity.zip .
                            unzip -o udacity.zip
                    Outputs: 
                    #Bonus points for useful outputs!


    # Deploy an autoscaling groups
    WebAppAutoScalingGroup: 
        Type: 
        Properties: 
    
    
